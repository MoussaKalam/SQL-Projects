select
		* 
from 
		[dbo].[202201-divvy-tripdata]

use 
		cyclistic_bike_sharing2

select * from [dbo].[202201-divvy-tripdata]

/* combining all the data for january to december*/

select * into YR22_monthly_divvytripdata
	from
		(select * from dbo.[202201-divvy-tripdata]
		union all
		select * from [dbo].[202202-divvy-tripdata]
		union all
		select * from [dbo].[202203-divvy-tripdata]
		union all
		select * from [dbo].[202204-divvy-tripdata]
		union all
		select * from [dbo].[202205-divvy-tripdata]
		union all
		select * from [dbo].[202206-divvy-tripdata]
		union all
		select * from [dbo].[202207-divvy-tripdata]
		union all
		select * from [dbo].[202208-divvy-tripdata]
		union all
		select * from [dbo].[202209-divvy-publictripdata]
		union all
		select * from [dbo].[202210-divvy-tripdata]
		union all
		select * from [dbo].[202211-divvy-tripdata]
		union all
		select * from [dbo].[202212-divvy-tripdata]) merged_data_alias;

SELECT *
FROM [dbo].[202204-divvy-tripdata]
WHERE ISNUMERIC(start_station_id) = 0;

SELECT *
FROM [dbo].[202207-divvy-tripdata]
WHERE ISNUMERIC(start_station_id) = 0;

SELECT *
FROM [dbo].[202209-divvy-publictripdata]
WHERE ISNUMERIC(start_station_id) = 0;

SELECT *
FROM [dbo].[202209-divvy-publictripdata]
WHERE ISNUMERIC(end_station_id) = 0;

SELECT *
FROM [dbo].[202209-divvy-publictripdata]
WHERE ISNUMERIC(end_station_id) = 0;


--
drop table [dbo].[YR22_monthly_divvytripdata]

select * from [dbo].[YR22_monthly_divvytripdata]



Alter Table	[dbo].[202207-divvy-tripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202207-divvy-tripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202209-divvy-publictripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202209-divvy-publictripdata] alter Column end_station_id nvarchar(255)
Alter Table	[dbo].[202210-divvy-tripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202210-divvy-tripdata] alter Column end_station_id nvarchar(255)
Alter Table	[dbo].[202211-divvy-tripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202211-divvy-tripdata] alter Column end_station_id nvarchar(255)
Alter Table	[dbo].[202212-divvy-tripdata] alter Column start_station_id nvarchar(255)
Alter Table	[dbo].[202212-divvy-tripdata] alter Column end_station_id nvarchar(255)

------------Ensuring data quality-------------
---------- ----2.0 Data cleaning ----------------
 /* Data cleaning involves identifying and correcting (or removing) corrupt, inaccurate, or irrelevant data.*/
 --1. Romove duplicates
--2. standardize the data
--3. Treating null values/blank columns


  -- 2.1 finding Null values
select * from [dbo].[YR22_monthly_divvytripdata]
where ride_id is null
/*(ride_id has zero null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where rideable_type is null
/*(rideable_type has zero null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where started_at is null
/*(started_at has zero null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where ended_at is null
/*(ended_at has zero null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where start_station_name is null
/*(start_station_name has 945,101 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where start_station_id is null
/*(start_station_id has 1,904,322 null)*/

select * from data_null_removed
where start_station_id is null
/*(start_station_id has 1,904,322 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where end_station_name is null
/*(end_station_name has 1,013,264 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where end_station_id is null
/*(end_station_id has 1,573,954 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where start_lat is null
/*(start_lat has 0 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where end_lat is null
/*(end_lat has 6,701 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where start_lng is null
/*(start_lng has 0 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where end_lng is null
/*(end_lng has 6,701 null)*/

select * from [dbo].[YR22_monthly_divvytripdata]
where member_casual is null
/*(member_casual has 0 null)*/
 
-- 2.2 Removing Null values
select * into data_null_removed
from
	(select * from [dbo].[YR22_monthly_divvytripdata] 
		where ride_id is not null
		and rideable_type  is not null
		and started_at  is not null
		and ended_at  is not null
		and start_station_name  is not null
		and start_station_id  is not null
		and end_station_name  is not null
		and end_station_id  is not null
		and start_lat  is not null
		and end_lat  is not null
		and start_lng  is not null
		and end_lng  is not null
		and member_casual is not null) nullrmvd

 
select /*top(10)*/ * from data_null_removed

-- 2.3 Removing duplicates values
SELECT ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, 
		end_station_name, end_station_id, start_lat,
		end_lat, start_lng, end_lng, member_casual, COUNT(*) as duplicaterows
FROM data_null_removed
GROUP BY ride_id, rideable_type, started_at, ended_at, start_station_name, start_station_id, 
		end_station_name, end_station_id, start_lat,
		end_lat, start_lng, end_lng, member_casual
HAVING COUNT(*) > 1;

-- (from the duplicate statement ran above we have 605,325 rows that are duplicate) --

---- now lets delete the duplicate rows--
delete from data_null_removed
where ride_id in (
			SELECT MAX(ride_id)
			FROM data_null_removed
			GROUP BY ride_id, rideable_type, started_at, ended_at, start_station_name,
					start_station_id, end_station_name, end_station_id, start_lat,
					end_lat, start_lng, end_lng, member_casual
			HAVING COUNT(*) > 1) 

SELECT ride_id, COUNT(*)
FROM data_null_removed
GROUP BY ride_id
HAVING COUNT(*) > 1;

SELECT start_station_name, COUNT(DISTINCT start_station_id)
FROM data_null_removed
GROUP BY start_station_name
HAVING COUNT(DISTINCT start_station_id) > 1;

--we normalized categorical data by ensuring consistent labeling. To do this we run a select distinct--

select distinct rideable_type
from data_null_removed

select distinct member_casual
from data_null_removed

select distinct start_station_name
from data_null_removed


update data_null_removed
set ride_id = TRIM(ride_id)
set	rideable_type = TRIM(rideable_type)
set	started_at = TRIM(started_at)                      
set	ended_at = TRIM(ended_at)
set	start_station_name = TRIM(start_station_name)
set	start_station_id = TRIM(start_station_id)
set	end_station_name = TRIM(end_station_name)
set	end_station_id = TRIM(end_station_id)
set	start_lat = TRIM(start_lat)
set	end_lat = TRIM(end_lat)
set	start_lng = TRIM(start_lng)
set	end_lng = TRIM(end_lng)
set	member_casual = TRIM(member_casual)


sp_help 'data_null_removed'




select top(10) * from data_null_removed


------------------Data Analysis---------------------
--1. What is the average ride duration?

SELECT
	AVG(ABS(DATEDIFF(MINUTE, started_at, ended_at)/1.0)) AS avg_ride_duration
FROM
	data_null_removed
ORDER BY
	avg_ride_duration;
--(average ride duration = 17.959 minutes)

--2 what is the average ride duration by riders?
SELECT
	member_casual, AVG(ABS(DATEDIFF(MINUTE, started_at, ended_at)/1.0)) AS avg_ride_duration
FROM
	data_null_removed
GROUP BY
	member_casual
ORDER BY
	avg_ride_duration;


--NILL. What is the distribution of ride durations?
SELECT abs(DATEDIFF(SECOND, started_at, ended_at)/1.0) AS ride_duration, COUNT(*) AS num_ride
FROM data_null_removed
GROUP BY abs(DATEDIFF(SECOND, started_at, ended_at)/1.0)
ORDER BY ride_duration;

--3. What are the busiest times of day for rides to start?
SELECT top 5 DATEPART(HOUR, started_at) AS start_hour, COUNT(*) AS ride_count
FROM data_null_removed
GROUP BY DATEPART(HOUR, started_at)
ORDER BY ride_count DESC;
--(the busiest is 17:00)

--4. What are the most popular start stations?
SELECT top 5 start_station_name, COUNT(*) AS ride_count
FROM data_null_removed
GROUP BY start_station_name
ORDER BY ride_count DESC


----total ride count
SELECT COUNT(*) AS Total_ride_count
FROM data_null_removed


--5. What are the most popular end stations?
select top 5 end_station_name, COUNT(*) as ride_count
from data_null_removed
group by end_station_name
order by ride_count desc

--6. What is the breakdown of rides between members and casual riders?

select member_casual, COUNT(*) as no_of_users
from data_null_removed
group by member_casual
order by no_of_users

--. What is the average ride duration by member and casual riders?
SELECT member_casual, AVG(DATEDIFF(MINUTE, started_at, ended_at)/1.0) AS avg_ride_duration
FROM data_null_removed
GROUP BY member_casual;

--. 
select member_casual, DATEPART(HOUR, started_at) as ridetime, COUNT(*) as ridecount
from data_null_removed
where member_casual = 'casual'
group by DATEPART(HOUR, started_at), member_casual
order by ridecount desc

--7 What is the average ride duration for different rideable types?
select top 10 rideable_type, member_casual, abs(avg(datediff(minute, started_at, ended_at))) as Ride_Minutes 
from data_null_removed
GROUP BY rideable_type, member_casual
order by Ride_Minutes desc

--8 Comparing ride type of casual and member riders
SELECT member_casual, rideable_type, COUNT(*) AS ride_count
FROM data_null_removed
GROUP BY member_casual, rideable_type
order by ride_count desc


--9 What months or seasons are casual riders most active
select /*top 1*/ member_casual, DATEPART(month, started_at) as ride_month, COUNT(*) as ride_count
from data_null_removed
where member_casual = 'casual'
group by member_casual, DATEPART(month, started_at)
order by ride_count desc

--10a Common routes (What is the most frequent ride between Casual and Members Riders)
select top 10 member_casual, start_station_name, end_station_name, COUNT(*) as ride_count
from data_null_removed
--where member_casual = 'casual'
group by member_casual, start_station_name, end_station_name
order by ride_count desc

--10b Common routes (What is the most frequent ride between Casual and Members Riders)
select top 3 member_casual, start_station_name, end_station_name, COUNT(*) as ride_count
from data_null_removed
where member_casual = 'member'
group by member_casual, start_station_name, end_station_name
order by ride_count desc

-- 11 what is the popular bike type
select rideable_type, COUNT(*) as ride_count
from data_null_removed
group by rideable_type
order by ride_count desc

-- 12 Check the most popular bike type per user type (casual and member)
SELECT member_casual, rideable_type, COUNT(*) AS ride_count
FROM data_null_removed
GROUP BY member_casual, rideable_type
ORDER BY member_casual, ride_count DESC;

-- 13 How does the number of rides vary by season for different user types (casual vs. member)?
SELECT  DATENAME(month,started_at) as Month,count(started_at) as number_of_rides, member_casual,
case when DATENAME(month,started_at) in ('January', 'February', 'December') then 'Winter'
	when DATENAME(month,started_at) in ('March', 'April', 'May') then 'Spring'
	when DATENAME(month,started_at)in ('June', 'July', 'August') then 'Summer'
	when DATENAME(month,started_at)in ('September' , 'October' , 'November') then 'Autum'
	else 'Unknown'
	end as Season
from data_null_removed
group by DATENAME(month,started_at), member_casual, 
	case when DATENAME(month,started_at) in ('January', 'February', 'December') then 'Winter'
		when DATENAME(month,started_at) in ('March', 'April', 'May') then 'Spring'
		when DATENAME(month,started_at)in ('June', 'July', 'August') then 'Summer'
		when DATENAME(month,started_at)in ('September' , 'October' , 'November') then 'Autum'
		else 'Unknown'
		end
order by member_casual, number_of_rides desc

-- 14 Rides by month and time
SELECT 
    DATENAME(month, started_at) AS month_name, 
    COUNT(started_at) AS number_of_rides, 
		member_casual,
    CASE 
        WHEN CAST(started_at AS TIME) BETWEEN '05:00:00' AND '11:59:59' THEN 'Morning'
        WHEN CAST(started_at AS TIME) BETWEEN '12:00:00' AND '17:59:59' THEN 'Afternoon'
        WHEN CAST(started_at AS TIME) BETWEEN '18:00:00' AND '20:59:59' THEN 'Evening'
        WHEN CAST(started_at AS TIME) BETWEEN '21:00:00' AND '23:59:59' 
             OR CAST(started_at AS TIME) BETWEEN '00:00:00' AND '04:59:59' THEN 'Night'
    END AS time_of_day
FROM data_null_removed
GROUP BY 
    DATENAME(month, started_at), 
		member_casual,
    CASE 
        WHEN CAST(started_at AS TIME) BETWEEN '05:00:00' AND '11:59:59' THEN 'Morning'
        WHEN CAST(started_at AS TIME) BETWEEN '12:00:00' AND '17:59:59' THEN 'Afternoon'
        WHEN CAST(started_at AS TIME) BETWEEN '18:00:00' AND '20:59:59' THEN 'Evening'
        WHEN CAST(started_at AS TIME) BETWEEN '21:00:00' AND '23:59:59' 
             OR CAST(started_at AS TIME) BETWEEN '00:00:00' AND '04:59:59' THEN 'Night'
    END;


--15 Rides by days_of_the_week by members and casuals
select member_casual, 
		case when DATEPART(WEEKDAY, started_at) in (1,5) then 'weekdays'
		else 'weekend'		
		end as periodoftheweek,
		COUNT(*) as ride_count
from data_null_removed
group by 
		member_casual, 
				case when DATEPART(WEEKDAY, started_at) in (1,5) then 'weekdays'
				else 'weekend'
				end

--- 16. For each starting station, how many trips were
------ started by casual and member riders, and where is
-------the station located (latitude and longitude)?

--- (i) count the number of trips departing from each station by casual members 
with departure_venue_for_casual_member as
	(
		select count(member_casual) as casual_user, start_station_name
		from data_null_removed
		where member_casual = 'casual'
		group by start_station_name
	),
--- (ii) count the number of trips departing from each station by member users
departure_venue_for_member_user as
	(
		select count(member_casual) as member_user, start_station_name
		from data_null_removed
		where member_casual = 'member'
		group by start_station_name
	),
departure_venue_for_allusers as
	(
		select dvfs.start_station_name, casual_user, member_user
		from departure_venue_for_casual_member dvfs
		join departure_venue_for_member_user dvfm
		on dvfs.start_station_name = dvfm.start_station_name
	),
--- (iii) calculate the average longitude and latitude
avrg_lat_lng as
	(select start_station_name,
	round(AVG(start_lat), 3) as avg_depart_station_latitude, 
	round(AVG(start_lng), 3) as avg_depart_station_longitude
	from data_null_removed
	group by start_station_name
	)

select	dvfa.start_station_name,
		dvfa.casual_user, dvfa.member_user, 
		round(avglatlng.avg_depart_station_latitude, 4) as starting_latitude,
		round(avglatlng.avg_depart_station_longitude, 4) as starting_longitude
from 	departure_venue_for_allusers as dvfa
join	avrg_lat_lng as avglatlng
on		dvfa.start_station_name=avglatlng.start_station_name


/*--- 17 For each station, how many trips were 
completed by casual users and member users, 
and where is the station located geographically?*/

----(i) Count the number of trips arrived at each stations by casual users
WITH
	arrive_venue_for_casual_riders AS (
SELECT
	COUNT(member_casual) as casual_user_ride_count, end_station_name
FROM 
	data_null_removed
WHERE 
	member_casual='CASUAL'
GROUP BY
	end_station_name),

----(ii) Count the number of trips arrived at each stations by members users
	arrive_venue_for_member_riders AS (
SELECT
	COUNT(member_casual) as member_user_ride_count, 
	end_station_name
FROM 
	data_null_removed
WHERE 
	member_casual='MEMBER'
GROUP BY
	end_station_name),

----(ii) COMBINE I & II TO GET ARRIVE VENUE FOR ALL USERS
	arrive_venue_for_allusers AS (
SELECT
	AVCR.end_station_name, casual_user_ride_count, member_user_ride_count
FROM
	arrive_venue_for_casual_riders AS AVCR
JOIN 
	arrive_venue_for_member_riders AS AVMR
ON 
	AVCR.end_station_name=AVMR.end_station_name),

--- (iii) calculate the average longitude and latitude
AVRG_LNG_LAT_B AS (
SELECT 
	end_station_name,
	ROUND(AVG(end_lat), 3) AS AVG_ARRIV_STATION_LAT,
	ROUND(AVG(end_lng), 3) AS AVG_ARRIV_STATION_LNG
FROM
	data_null_removed
GROUP BY 
	end_station_name)

SELECT 
	AVFA.end_station_name,
	AVFA.casual_user_ride_count,
	AVFA.member_user_ride_count,
	ROUND(AVRGLLB.AVG_ARRIV_STATION_LAT, 4) as end_station_latitude,
	ROUND(AVRGLLB.AVG_ARRIV_STATION_LNG, 4) as end_station_longitude
FROM
	arrive_venue_for_allusers AS AVFA
JOIN
	AVRG_LNG_LAT_B AS AVRGLLB
ON
	AVFA.end_station_name=AVRGLLB.end_station_name
